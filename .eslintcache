[{"D:\\project3\\chat\\src\\index.js":"1","D:\\project3\\chat\\src\\components\\App.js":"2","D:\\project3\\chat\\src\\hooks\\useLocalStorage.js":"3","D:\\project3\\chat\\src\\components\\Loginpage.js":"4","D:\\project3\\chat\\src\\components\\Dashboard.js":"5","D:\\project3\\chat\\src\\components\\Sidebar.js":"6","D:\\project3\\chat\\src\\components\\Contact.js":"7","D:\\project3\\chat\\src\\components\\NewConversationModal.js":"8","D:\\project3\\chat\\src\\components\\Conversation.js":"9","D:\\project3\\chat\\src\\contexts\\ContactsProvider.js":"10","D:\\project3\\chat\\src\\components\\NewContactModal.js":"11","D:\\project3\\chat\\src\\contexts\\ConversationsProvider.js":"12","D:\\project3\\chat\\src\\components\\OpenConversation.js":"13","D:\\project3\\chat\\src\\contexts\\SocketProvider.js":"14"},{"size":254,"mtime":1610632968905,"results":"15","hashOfConfig":"16"},{"size":809,"mtime":1610697934404,"results":"17","hashOfConfig":"16"},{"size":705,"mtime":1610634329997,"results":"18","hashOfConfig":"16"},{"size":988,"mtime":1610697934405,"results":"19","hashOfConfig":"16"},{"size":532,"mtime":1610696800831,"results":"20","hashOfConfig":"16"},{"size":2285,"mtime":1610674734297,"results":"21","hashOfConfig":"16"},{"size":479,"mtime":1610679681274,"results":"22","hashOfConfig":"16"},{"size":1849,"mtime":1610683365685,"results":"23","hashOfConfig":"16"},{"size":752,"mtime":1610683436426,"results":"24","hashOfConfig":"16"},{"size":661,"mtime":1610679969178,"results":"25","hashOfConfig":"16"},{"size":1190,"mtime":1610675689282,"results":"26","hashOfConfig":"16"},{"size":3890,"mtime":1610697934405,"results":"27","hashOfConfig":"16"},{"size":2718,"mtime":1610704992215,"results":"28","hashOfConfig":"16"},{"size":667,"mtime":1610705173355,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19pular",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\project3\\chat\\src\\index.js",[],["63","64"],"D:\\project3\\chat\\src\\components\\App.js",["65"],"import React, { useState } from 'react';\r\nimport { ContactsProvider } from '../contexts/ContactsProvider';\r\nimport { ConversationsProvider } from '../contexts/ConversationsProvider';\r\nimport { SocketProvider } from '../contexts/SocketProvider';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport Dashboard from './Dashboard';\r\nimport Loginpage from './Loginpage';\r\n\r\nfunction App() {\r\n  const [id, setId] = useLocalStorage();\r\n\r\n  const dashboard = (\r\n    <SocketProvider id={id}>\r\n      <ContactsProvider>\r\n        <ConversationsProvider id={id}>\r\n          <Dashboard id={id} />\r\n        </ConversationsProvider>\r\n      </ContactsProvider>\r\n    </SocketProvider>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {id ? dashboard : < Loginpage onIdSubmit={setId} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\project3\\chat\\src\\hooks\\useLocalStorage.js",[],"D:\\project3\\chat\\src\\components\\Loginpage.js",[],"D:\\project3\\chat\\src\\components\\Dashboard.js",["66"],"import { FormCheck } from \"react-bootstrap\";\r\nimport React from 'react'\r\nimport Sidebar from \"./Sidebar\";\r\nimport OpenConversation from \"./OpenConversation\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\n\r\nexport default function Dashboard({ id }) {\r\n    const { selectedConversation } = useConversations();\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ height: '100vh' }}>\r\n            <Sidebar id={id} />\r\n            {selectedConversation && <OpenConversation />}\r\n        </div>\r\n    )\r\n}\r\n","D:\\project3\\chat\\src\\components\\Sidebar.js",[],"D:\\project3\\chat\\src\\components\\Contact.js",[],"D:\\project3\\chat\\src\\components\\NewConversationModal.js",[],"D:\\project3\\chat\\src\\components\\Conversation.js",[],["67","68"],"D:\\project3\\chat\\src\\contexts\\ContactsProvider.js",[],"D:\\project3\\chat\\src\\components\\NewContactModal.js",[],"D:\\project3\\chat\\src\\contexts\\ConversationsProvider.js",[],"D:\\project3\\chat\\src\\components\\OpenConversation.js",["69"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { useConversations } from '../contexts/ConversationsProvider';\r\n\r\nexport default function OpenConversation() {\r\n    const [text, setText] = useState('');\r\n    const { sendMessage, selectedConversation } = useConversations();\r\n    const lastMessageRef = useRef();\r\n    const setRef = useCallback(node => {\r\n        if (node) {\r\n            node.scrollIntoView({ smooth: true });\r\n        }\r\n    }, []);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        sendMessage(\r\n            selectedConversation.recipients.map(r => r.id),\r\n            text\r\n        );\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-grow-1\">\r\n            <div className=\"flex-grow-1 overflow-auto\">\r\n                <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\r\n                    {selectedConversation.messages.map((message, index) => {\r\n                        const lastMessage = selectedConversation.messages.length - 1 === index;\r\n                        return (\r\n                            <div\r\n                                ref={lastMessage ? setRef : null}\r\n                                key={index}\r\n                                className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end aligb-items-end' : 'align-items-start'}`}>\r\n                                <div\r\n                                    className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}>\r\n                                    {message.text}\r\n                                </div>\r\n                                <div className={`text-muted smamll ${message.fromMe ? 'text-right' : ''}`}>\r\n                                    {message.fromMe ? 'You' : message.senderName}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"m-2\">\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            required\r\n                            value={text}\r\n                            onChange={e => setText(e.target.value)} />\r\n                        <InputGroup.Append>\r\n                            <Button type=\"submit\">Send</Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","D:\\project3\\chat\\src\\contexts\\SocketProvider.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":19},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","severity":1,"message":"81","line":8,"column":11,"nodeType":"76","messageId":"77","endLine":8,"endColumn":25},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FormCheck' is defined but never used.",["82"],["83"],"'lastMessageRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]